schema {
  query: Root
}

"""
A wiki article
"""
type Article implements Node & Tagged & Versioned {
  """
  The ID of an object
  """
  id: ID!

  """
  The article's title
  """
  title: String

  """
  The title of the article after resolving redirects
  """
  resolvedTitle: String

  """
  The destination ([[wiki article]] or URL) the article should redirect to
  """
  redirect: String
  body: Markup!

  """
  Succinct summary of the article content
  """
  description: String

  """
  URL for the article
  """
  url: String!
  tags: [TagName!]!

  """
  URL to edit the article
  """
  editURL: String!
  history: History!

  """
  When the content was first created
  """
  createdAt: DateTime

  """
  When the content was last updated
  """
  updatedAt: DateTime
}

"""
A connection to a list of items.
"""
type ArticleConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [ArticleEdge]
}

"""
An edge in a connection.
"""
type ArticleEdge {
  """
  The item at the end of the edge
  """
  node: Article

  """
  A cursor for use in pagination
  """
  cursor: String!
}

union Content = Article | Page | Post | Snippet

"""
A JSON-style (ISO 8601) date
"""
scalar DateTime

"""
Revision history for the object
"""
type History {
  """
  URL showing revision history for the object
  """
  url: String!
}

"""
The textual markup for a piece of content
"""
type Markup {
  """
  Unique string that may be used as a DOM identifier (or a prefix of one)
  """
  DOMIdentifier: String!

  """
  Unprocessed plain-text source of the markup
  """
  raw: String!

  """
  The format of the markup source
  """
  format: MARKUP_FORMAT_TYPE!

  """
  HTML output of transformed markup
  """
  html(
    """
    Base heading level [0-6]
    """
    baseHeadingLevel: Int
  ): String!
}

enum MARKUP_FORMAT_TYPE {
  C
  HTML
  M
  MD
  PATCH
  RB
  SH
  TXT
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
A page
"""
type Page implements Node & Tagged & Versioned {
  """
  The ID of an object
  """
  id: ID!

  """
  The page's title
  """
  title: String
  body: Markup!

  """
  Succinct summary of the page content
  """
  description: String

  """
  URL for the page
  """
  url: String!
  history: History!
  tags: [TagName!]!

  """
  When the content was first created
  """
  createdAt: DateTime

  """
  When the content was last updated
  """
  updatedAt: DateTime
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A blog post
"""
type Post implements Node & Tagged & Versioned {
  """
  The ID of an object
  """
  id: ID!

  """
  The blog post's title
  """
  title: String
  body: Markup!

  """
  Estimate of time necessary to read the post, in minutes
  """
  readTime: Int!

  """
  Succinct summary of the post content
  """
  description: String

  """
  URL for the post
  """
  url: String!
  history: History!
  tags: [TagName!]!

  """
  When the content was first created
  """
  createdAt: DateTime

  """
  When the content was last updated
  """
  updatedAt: DateTime
}

"""
A connection to a list of items.
"""
type PostConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [PostEdge]
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge
  """
  node: Post

  """
  A cursor for use in pagination
  """
  cursor: String!
}

type Root {
  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node

  """
  All wiki articles
  """
  articles(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): ArticleConnection!

  """
  All blog posts
  """
  posts(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): PostConnection!

  """
  All snippets
  """
  snippets(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): SnippetConnection!

  """
  All tags
  """
  tags(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): TagConnection!

  """
  Search results
  """
  search(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int

    """
    One or more search terms, separated by spaces
    """
    q: String
  ): SearchResultConnection!
}

"""
A connection to a list of items.
"""
type SearchResultConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [SearchResultEdge]

  """
  Total number of search results
  """
  count: Int!
}

"""
An edge in a connection.
"""
type SearchResultEdge {
  """
  The item at the end of the edge
  """
  node: Content

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A snippet
"""
type Snippet implements Node & Tagged & Versioned {
  """
  The ID of an object
  """
  id: ID!

  """
  The snippet's title
  """
  title: String
  body: Markup!

  """
  Succinct summary of the snippet content
  """
  description: String

  """
  Raw source of snippet
  """
  source(format: MARKUP_FORMAT_TYPE): String

  """
  URL for the snippet
  """
  url: String!
  history: History!
  tags: [TagName!]!

  """
  When the content was first created
  """
  createdAt: DateTime

  """
  When the content was last updated
  """
  updatedAt: DateTime
}

"""
A connection to a list of items.
"""
type SnippetConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [SnippetEdge]
}

"""
An edge in a connection.
"""
type SnippetEdge {
  """
  The item at the end of the edge
  """
  node: Snippet

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A tag
"""
type Tag implements Node {
  """
  The ID of an object
  """
  id: ID!

  """
  The tag's name
  """
  name: TagName!

  """
  Count of items tagged with the tag
  """
  count: Int!

  """
  URL for the tag
  """
  url: String!

  """
  Items tagged with a particular tag
  """
  taggables(
    """
    Returns the items in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the first n items from the list.
    """
    first: Int

    """
    Returns the items in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the last n items from the list.
    """
    last: Int
  ): TaggableConnection!
}

"""
A connection to a list of items.
"""
type TagConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [TagEdge]

  """
  Total number of tags
  """
  count: Int!
}

"""
An edge in a connection.
"""
type TagEdge {
  """
  The item at the end of the edge
  """
  node: Tag

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type TaggableConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [TaggableEdge]

  """
  Number of tags
  """
  count: Int!
}

"""
An edge in a connection.
"""
type TaggableEdge {
  """
  The item at the end of the edge
  """
  node: Content

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
An object with a tags field
"""
interface Tagged {
  """
  A list of tag names
  """
  tags: [TagName!]!
}

"""
A tag name
"""
scalar TagName

"""
An object with history and timestamp fields
"""
interface Versioned {
  """
  When the content was first created
  """
  createdAt: DateTime

  """
  Revision history for the object
  """
  history: History!

  """
  When the content was last updated
  """
  updatedAt: DateTime
}
